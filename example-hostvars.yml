---
interfaces:
  wan:
    managed: False
    ipv4: <wan ipv4 address>
    ipv6: <wan ipv6 address>

  <inteface name>:
    announce: yes # Optional, defaults to no, controls wether addresses on this interface will be announced via BGP
    managed: yes|no # Optional, defaults to no, only interfaces with managed set to yes will be configured in /etc/network/interfaces.d
    type: <physical|bridge|dummy> # Interface type, physical denotes interfaces
    slaves: <list of slaves> # Optional, defaults to [], slave of this interface (currently only supported on bridges)
    ipv4: <ipv4 address in as/prefixlen>
    ipv6: <ipv6 address in as/prefixlen>
    forwarding: yes|no # Optional, allow forwarding of asn traffic
    mtu: <mtu of interface> # Optional
    dhcp:
      address: <ip address for dhcp server> # Optional, defaults to primary ipv4 address of interface
      range: # Optional
        start: <first dhcp address> # Optional
        end: <last dhcp address> # Optional
      options: # Optional, can be used to override dhcp server options
        <option_name>: <option_value>|[ <option_value>, ... ] # Any valid isc-dhcp-server option
    radvd: yes|no # Optional, defaults to no, enables IPv6 RAs
    all_knowing_dns_hostname: "%DIGITS%.<domain_name>" # Optional, hostname for IPv6 RDNS
    all_knowing_dns_upstream: "<IPv6 address>"  # Optional, upstream server for RDNS queries

  # Configures the physical interface <ifname>
  <ifname>:
    managed: True
    ipv4: <ipv4 address> # Supports lists of addresses
    ipv6: <ipv6 address> # Supports lists of addresses
    forwarding: yes|no # Optional, allow forwarding of asn traffic
    mtu: <mtu of interface> # Optional
    dhcp:
      address: <ip address for dhcp server> # Optional, defaults to primary ipv4 address of interface
      range: # Optional
        start: <first dhcp address> # Optional
        end: <last dhcp address> # Optional
      options: # Optional, can be used to override dhcp server options
        <option_name>: <option_value>|[ <option_value>, ... ] # Any valid isc-dhcp-server option
    radvd: yes|no # Optional, defaults to no, enables IPv6 RAs
    all_knowing_dns_hostname: "%DIGITS%.<domain_name>" # Optional, hostname for IPv6 RDNS
    all_knowing_dns_upstream: "<IPv6 address>"  # Optional, upstream server for RDNS queries

addresses:
  as<asn>: # This name MUST be "as<asn>"
    ipv4: <ipv4 address in as/prefixlen>
    ipv6: <ipv6 address in as/prefixlen>

# friendly name, don't exceed length of 12 character for readability
friendly_name: <friendly name>

bgp:
  router_id: <router id>
  route_reflection: off|client|server|<cluster_id> # Optional, defaults to off
  announce: # Optional, list of additional static announcements
    - net: <valid ipv4/ipv6 prefix>
      via: <either an interface or a valid ipv4/ipv6 nexthop> # Optional, unreachable route if not defined

wireguard:
  key:
    private: <private wireguard key>
    public:  <public wireguard key>
  mtu: <internal wireguard mtu> # optional

vultr: # Optional
  ifname: <name of peering interface>
  ipv4:
    address: <local ipv4 address on peering interface>
    peer: <ipv4 address of peer>
    gateway: <ipv4 address of gateway for multihop>

  ipv6:
    address: <local ipv6 address on peering interface>
    peer: <ipv6 address of peer>
    gateway: <ipv6 address of gateway for multihop>

  password: <MD5 auth password>

peerings: # Optional
  <name>:
    peer:
      asn: <asn of peer>
      ipv4: <ipv4 address of peer> # optional
      ipv6: <ipv6 address of peer> # optional
    self:
      ifname: <name of peering interface>
      ipv4: <ipv4 source address> # optional, required only if peer.ipv4 is set
    password: <MD5 auth password> # optional
