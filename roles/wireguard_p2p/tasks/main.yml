---
#- name: Ensure wireguard related firewall config is set up
#  block:
#  - name: Ensure input chain for wireguard is set up
#    template:
#      src: '{{ "etc/iptables.d/001-CHAINS-input_wg-{{ site.code }}.j2" }}'
#      dest: /etc/iptables.d/001-CHAINS-input_wg-{{ site.code }}
#    notify: restart firewall
#
#  - name: Ensure delegation to wireguard input chain is set up
#    template:
#      src: '{{ "etc/iptables.d/100-device-wg-{{ site.code }}.j2" }}'
#      dest: /etc/iptables.d/100-device-wg-{{ site.code }}
#    notify: restart firewall
#  when: 'wireguard is defined'
#  tags: wireguard_p2p, firewall

- name: Ensure wireguard cofig directory exists
  file:
    path: /etc/wireguard
    state: directory
  tags: wireguard_p2p

- name: Ensure wireguard config is deployed
  vars:
    ifname: '{{ wg_iface }}'
  template:
    src: '{{ "etc/wireguard/{{ ifname }}.conf.j2" }}'
    dest: '/etc/wireguard/{{ ifname }}.conf'
  register: ensure_wg_config
  tags: wireguard_p2p

- name: Ensure wireguard interface config is deployed
  vars:
    interface:
      name: '{{ wg_iface }}'
      virtual: yes
      ipv4: '{{ wg_self.ipv4 | default([]) }}'
      ipv6: '{{ wg_self.ipv6 | default([]) }}'
      method: '{{ "static" if wg_self.ipv4 is defined else "manual" }}'
      family: inet
      inet_options:
        pre-up:
          - ip link add $IFACE type wireguard || true
          - wg setconf $IFACE /etc/wireguard/{{ wg_iface }}.conf
          - '{{ "ip link set $IFACE mtu " ~ wg_self.mtu if wg_self.mtu is defined and wg_self.mtu != False else "true" }}'
        post-down:
          - ip link del $IFACE || true
  import_role:
    name: interface
  tags: wireguard_p2p

- name: Restart {{ interface.name }}
  vars:
    ifname: '{{ wg_iface }}'
    virtual: True
  import_role:
    name: restart_interface
  when: ensure_wg_config.changed
  tags: interface

- name: Force execution of handlers
  vars:
    ifname: '{{ wg_iface }}'
  meta: flush_handlers
