protocol bgp '{{ peername }}' from bgp_transit {
{% if peering.self.ipv6 is defined %}
  source address {{ peering.self.ipv6 }};
{% endif %}
  neighbor {{ peering.peer.ipv6 }} as {{ peering.peer.asn }};
{% if peering.password is defined %}
  password "{{ peering.password }}";
{% endif %}
{% set res_var_suffix = peername | regex_replace('[^a-zA-Z0-9_]', '_') %}
{% if peering.filter.import is defined %}
  import filter
  string res_import_{{ res_var_suffix }};
  {
    res_import_{{ res_var_suffix }} = f_upstream_import();
    if res_import_{{ res_var_suffix }} = "" then {
  {%- if peering.filter.import.prepend is defined %}
    {%- for _ in range(peering.filter.import.prepend) %}

      bgp_path.prepend(OWN_AS);
    {%- endfor %}
  {%- endif %}

      accept;
    }
    reject res_import_{{ res_var_suffix }};
  };
{% endif %}
{% if peering.filter.export is defined %}
  export filter
  string res_export_{{ res_var_suffix }};
  {
    res_export_{{ res_var_suffix }} = f_upstream_export();
    if res_export_{{ res_var_suffix }} = "" then {
  {%- if peering.filter.export.prepend is defined %}
    {%- for _ in range(peering.filter.export.prepend) %}

      bgp_path.prepend(OWN_AS);
    {%- endfor %}
  {%- endif %}

      accept;
    }
    reject res_export_{{ res_var_suffix }};
  };
{% endif %}
  direct;
};

