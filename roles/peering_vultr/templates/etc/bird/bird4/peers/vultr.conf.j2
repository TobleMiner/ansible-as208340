protocol static vultr_gw {
  table t_fulltable;
  route {{ vultr.ipv4.peer }}/32 via {{ vultr.ipv4.gateway }};
}

protocol bgp vultr from bgp_upstream {
  source address {{ vultr.ipv4.address }};
  neighbor {{ vultr.ipv4.peer }} as {{ vultr_asn }};
  password "{{ vultr.password }}";
  multihop 2;
{% set res_var_suffix = 'vultr' %}
{% if vultr.filter.import is defined %}
  import filter
  string res_import_{{ res_var_suffix }};
  {
    res_import_{{ res_var_suffix }} = f_upstream_import();
    if res_import_{{ res_var_suffix }} = "" then {
  {%- if vultr.filter.import.prepend is defined %}
    {%- for _ in range(vultr.filter.import.prepend) %}

      bgp_path.prepend(OWN_AS);
    {%- endfor %}
  {%- endif %}

      accept;
    }
    reject res_import_{{ res_var_suffix }};
  };
{% endif %}
{% if vultr.filter.export is defined %}
  export filter
  string res_export_{{ res_var_suffix }};
  {
    res_export_{{ res_var_suffix }} = f_upstream_export(false);
    if res_export_{{ res_var_suffix }} = "" then {
  {%- if vultr.filter.export.prepend is defined %}
    {%- for _ in range(vultr.filter.export.prepend) %}

      bgp_path.prepend(OWN_AS);
    {%- endfor %}
  {%- endif %}

      accept;
    }
    reject res_export_{{ res_var_suffix }};
  };
{% endif %}
};

