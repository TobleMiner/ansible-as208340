filter as_set_export_v6 {
  if is_default_v6() then {
    reject "Default route not allowed in fulltable setup";
  }
  if ! is_public_v6() then {
    reject "Not public";
  }
  if is_own_net_v6() then {
    accept;
  }
  if C_LEARNED_FROM_DOWNSTREAM_PEER ~ bgp_community then {
    accept;
  }
  reject "Not marked for export";
}

function f_upstream_export_v6(bool export_foreign_routes) -> string {
  # Export our own routes and routes from our downstreams
  if is_default_v6() then {
    return "Default route not allowed in fulltable setup";
  }
  if ! is_publicly_routable_v6() then {
    return "Not publicly routable";
  }
  if is_own_net_v6() then {
    return "";
  }
  if C_LEARNED_FROM_DOWNSTREAM_PEER ~ bgp_community && export_foreign_routes then {
    return "";
  }
  if export_foreign_routes then {
    return "Not marked for export";
  }
  return "Not our network";
}

filter upstream_export_v6
string res;
{
  res = f_upstream_export_v6(false);
  if res = "" then {
    accept;
  }
  reject res;
}

filter upstream_export_transitive_v6
string res;
{
  res = f_upstream_export_v6(true);
  if res = "" then {
    accept;
  }
  reject res;
}

function f_upstream_import_v6() -> string {
  # Import all publicly routable routes that are not our own routes
  if is_default_v6() then {
    return "Default route not allowed in fulltable setup";
  }
  if ! is_publicly_routable_v6() then {
    return "Not publicly routable";
  }
  if is_own_net_v6() then {
    return "Part of our network";
  }
  bgp_community = -empty-;
  return "";
}

filter upstream_import_v6
string res;
{
  res = f_upstream_import_v6();
  if res = "" then {
    accept;
  }
  reject res;
}

function f_downstream_export_v6() -> string {
  # Export every valid route we know
  if is_default_v6() then {
    return "Default route not allowed in fulltable setup";
  }
  if ! is_publicly_routable_v6() then {
    return "Not publicly routable";
  }
  return "";
}

filter downstream_export_v6
string res;
{
  res = f_downstream_export_v6();
  if res = "" then {
    accept;
  }
  reject res;
}

function f_downstream_import_v6() -> string {
  # Import all valid routes that are not ours, and mark for upstream export
  if is_default_v6() then {
    return "Default route not allowed in fulltable setup";
  }
  if ! is_publicly_routable_v6() then {
    return "Not publicly routable";
  }
  if is_own_net_v6() then {
    return "Part of our network";
  }
  # Add community to mark as route learned from downstream
  bgp_community = -empty-;
  bgp_community.add(C_LEARNED_FROM_DOWNSTREAM_PEER); 
  return "";
}

filter downstream_import_v6
string res;
{
  res = f_downstream_import_v6();
  if res = "" then {
    accept;
  }
  reject res;
}

filter ibgp_import_v6 {
  accept;
}

filter ibgp_export_v6 {
  accept;
}
